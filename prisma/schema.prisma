generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  game        game[]
}

model game {
  id           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String        @db.VarChar(255)
  rules        String?       @db.VarChar(255)
  player_limit Int?
  status       String        @db.VarChar(255)
  company_id   String        @db.Uuid
  admin_id     String        @db.Uuid
  created_at   DateTime      @default(now()) @db.Timestamp(6)
  updated_at   DateTime      @default(now()) @db.Timestamp(6)
  user         user          @relation(fields: [admin_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  company      company       @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  game_player  game_player[]
  player       player[]
}

model game_player {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  game_id    String   @db.Uuid
  player_id  String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  game       game     @relation(fields: [game_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  player     player   @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model player {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username    String        @db.VarChar(255)
  score       Int?
  status      String        @db.VarChar(255)
  game_id     String        @db.Uuid
  user_id     String        @db.Uuid
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  game_player game_player[]
  game        game          @relation(fields: [game_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user        user          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  company     company[]
  game        game[]
  player      player[]
}
